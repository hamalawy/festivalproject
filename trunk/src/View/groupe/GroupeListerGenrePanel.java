/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GroupeListerGenrePanel.java
 *
 * Created on 01-mai-2009, 22:02:55
 */
package View.groupe;

import Business.AllGroupeSceneTableModel;
import Controller.Controller;
import Data.BDException;
import Business.GroupeScene;
import View.BienvenuePanel;
import View.MainFrame;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Cramike
 */
public class GroupeListerGenrePanel extends javax.swing.JPanel {

    private MainFrame mainFrame;

    /** Creates new form GroupeListerGenrePanel */
    public GroupeListerGenrePanel(MainFrame mainFrame) {
        this.mainFrame = mainFrame;
        initComponents();

        if(comboGenre.getModel().getSize()>0) {
            table.setModel(new AllGroupeSceneTableModel(getAllGroupeScene((String)comboGenre.getModel().getSelectedItem())));
        }
        

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        labelGenre = new javax.swing.JLabel();
        comboGenre = new javax.swing.JComboBox();
        scroll = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        butRetour = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Lister les groupes par genre"));
        setLayout(new java.awt.GridBagLayout());

        labelGenre.setText("Genre musical");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        add(labelGenre, gridBagConstraints);

        comboGenre.setModel(new DefaultComboBoxModel(getAllGenre()));
        comboGenre.setMinimumSize(new java.awt.Dimension(110, 20));
        comboGenre.setPreferredSize(new java.awt.Dimension(110, 20));
        comboGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboGenreActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        add(comboGenre, gridBagConstraints);

        scroll.setMinimumSize(new java.awt.Dimension(375, 275));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        table.setRowHeight(20);
        scroll.setViewportView(table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 20);
        add(scroll, gridBagConstraints);

        butRetour.setText("Retour");
        butRetour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRetourActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        add(butRetour, gridBagConstraints);

        jLabel1.setText("<html>Sélectionnez le le genre dont vous voulez afficher les groupes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 20);
        add(jLabel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void butRetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRetourActionPerformed
        mainFrame.afficherPanel(new BienvenuePanel());
    }//GEN-LAST:event_butRetourActionPerformed

    private void comboGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboGenreActionPerformed
        loadTable((String) comboGenre.getSelectedItem());
    }//GEN-LAST:event_comboGenreActionPerformed

    private void loadTable(String genre) {
            table.setModel(new AllGroupeSceneTableModel(getAllGroupeScene(genre)));
            System.out.println("table update");
    }

    private Vector<GroupeScene> getAllGroupeScene(String genre) {
        Vector<GroupeScene> vect = new Vector<GroupeScene>();
        try {
            vect = Controller.getAllGroupeGenre(genre);
        } catch (BDException ex) {
            mainFrame.getBarreInfo().setText(ex.toString());
        } finally {
            return vect;
        }
    }

    private Vector<String> getAllLibScene() {
        Vector<String> vec = new Vector<String>();
        try {
            vec = Controller.getAllLibScene();
        } catch (BDException ex) {
            mainFrame.getBarreInfo().setText(ex.toString());
        } finally {
            return vec;
        }
    }

    private Vector<String> getAllGenre() {
        Vector<String> vec = new Vector<String>();
        try {
            vec = Controller.getAllGenre();
            System.out.println(vec.elementAt(0));
        } catch (BDException ex) {
            mainFrame.getBarreInfo().setText(ex.toString());
        } finally {
            return vec;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butRetour;
    private javax.swing.JComboBox comboGenre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelGenre;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
